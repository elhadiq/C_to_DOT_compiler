State 2 conflicts: 2 shift/reduce
State 40 conflicts: 1 reduce/reduce
State 75 conflicts: 1 reduce/reduce
State 95 conflicts: 1 reduce/reduce
State 111 conflicts: 1 reduce/reduce
State 126 conflicts: 1 reduce/reduce
State 128 conflicts: 1 reduce/reduce
State 129 conflicts: 1 reduce/reduce
State 150 conflicts: 1 reduce/reduce
State 155 conflicts: 1 reduce/reduce


Grammar

    0 $accept: programme $end

    1 programme: liste_declarations liste_fonctions

    2 liste_declarations: liste_declarations declaration
    3                   | %empty

    4 liste_fonctions: liste_fonctions fonction
    5                | %empty

    6 declaration: type liste_declarateurs ';'

    7 liste_declarateurs: liste_declarateurs ',' declarateur
    8                   | declarateur

    9 declarateur: IDENTIFICATEUR
   10            | declarateur '[' CONSTANTE ']'

   11 $@1: %empty

   12 fonction: $@1 type IDENTIFICATEUR '(' liste_parms ')' '{' liste_declarations liste_instructions '}'

   13 $@2: %empty

   14 fonction: $@2 EXTERN type IDENTIFICATEUR '(' liste_parms ')' ';'

   15 type: VOID
   16     | INT

   17 liste_parms: liste_parms ',' parm
   18            | parm
   19            | %empty

   20 parm: INT IDENTIFICATEUR

   21 liste_instructions: liste_instructions instruction
   22                   | %empty

   23 $@3: %empty

   24 instruction: $@3 affectation ';'

   25 $@4: %empty

   26 instruction: $@4 iteration

   27 $@5: %empty

   28 instruction: $@5 selection

   29 $@6: %empty

   30 instruction: $@6 saut

   31 $@7: %empty

   32 instruction: $@7 appel

   33 $@8: %empty

   34 instruction: $@8 bloc

   35 iteration: FOR '(' affectation ';' condition ';' affectation ')' instruction
   36          | WHILE '(' condition ')' instruction

   37 selection: IF '(' condition ')' instruction
   38          | IF '(' condition ')' instruction ELSE instruction
   39          | SWITCH '(' expression ')' instruction
   40          | CASE CONSTANTE ':' instruction
   41          | DEFAULT ':' instruction

   42 saut: BREAK ';'
   43     | RETURN ';'
   44     | RETURN expression ';'

   45 affectation: variable '=' expression

   46 bloc: '{' liste_declarations liste_instructions '}'

   47 $@9: %empty

   48 appel: $@9 IDENTIFICATEUR '(' liste_expressions ')' ';'

   49 variable: IDENTIFICATEUR
   50         | variable '[' expression ']'

   51 expression: '(' expression ')'
   52           | expression binary_op expression
   53           | MOINS expression
   54           | CONSTANTE
   55           | variable
   56           | IDENTIFICATEUR '(' liste_expressions ')'

   57 liste_expressions: liste_expressions ',' expression
   58                  | expression
   59                  | %empty

   60 condition: NOT '(' condition ')'
   61          | condition binary_rel condition
   62          | '(' condition ')'
   63          | expression binary_comp expression

   64 binary_op: PLUS
   65          | MOINS
   66          | MUL
   67          | DIV
   68          | LSHIFT
   69          | RSHIFT
   70          | BAND
   71          | BOR

   72 binary_rel: LAND
   73           | LOR

   74 binary_comp: LT
   75            | GT
   76            | GEQ
   77            | LEQ
   78            | EQ
   79            | NEQ


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 12 14 35 36 37 38 39 48 51 56 60 62
    ')' (41) 12 14 35 36 37 38 39 48 51 56 60 62
    ',' (44) 7 17 57
    ':' (58) 40 41
    ';' (59) 6 14 24 35 42 43 44 48
    '=' (61) 45
    '[' (91) 10 50
    ']' (93) 10 50
    '{' (123) 12 46
    '}' (125) 12 46
    error (256)
    IDENTIFICATEUR (258) 9 12 14 20 48 49 56
    CONSTANTE (259) 10 40 54
    VOID (260) 15
    INT (261) 16 20
    FOR (262) 35
    WHILE (263) 36
    IF (264) 37 38
    ELSE (265) 38
    SWITCH (266) 39
    CASE (267) 40
    DEFAULT (268) 41
    BREAK (269) 42
    RETURN (270) 43 44
    PLUS (271) 64
    MOINS (272) 53 65
    MUL (273) 66
    DIV (274) 67
    LSHIFT (275) 68
    RSHIFT (276) 69
    BAND (277) 70
    BOR (278) 71
    LAND (279) 72
    LOR (280) 73
    LT (281) 74
    GT (282) 75
    EXTERN (283) 14
    GEQ (284) 76
    LEQ (285) 77
    EQ (286) 78
    NEQ (287) 79
    NOT (288) 60
    THEN (289)
    OP (290)
    REL (291)


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    programme (48)
        on left: 1
        on right: 0
    liste_declarations (49)
        on left: 2 3
        on right: 1 2 12 46
    liste_fonctions (50)
        on left: 4 5
        on right: 1 4
    declaration (51)
        on left: 6
        on right: 2
    liste_declarateurs (52)
        on left: 7 8
        on right: 6 7
    declarateur (53)
        on left: 9 10
        on right: 7 8 10
    fonction (54)
        on left: 12 14
        on right: 4
    $@1 (55)
        on left: 11
        on right: 12
    $@2 (56)
        on left: 13
        on right: 14
    type (57)
        on left: 15 16
        on right: 6 12 14
    liste_parms (58)
        on left: 17 18 19
        on right: 12 14 17
    parm (59)
        on left: 20
        on right: 17 18
    liste_instructions (60)
        on left: 21 22
        on right: 12 21 46
    instruction (61)
        on left: 24 26 28 30 32 34
        on right: 21 35 36 37 38 39 40 41
    $@3 (62)
        on left: 23
        on right: 24
    $@4 (63)
        on left: 25
        on right: 26
    $@5 (64)
        on left: 27
        on right: 28
    $@6 (65)
        on left: 29
        on right: 30
    $@7 (66)
        on left: 31
        on right: 32
    $@8 (67)
        on left: 33
        on right: 34
    iteration (68)
        on left: 35 36
        on right: 26
    selection (69)
        on left: 37 38 39 40 41
        on right: 28
    saut (70)
        on left: 42 43 44
        on right: 30
    affectation (71)
        on left: 45
        on right: 24 35
    bloc (72)
        on left: 46
        on right: 34
    appel (73)
        on left: 48
        on right: 32
    $@9 (74)
        on left: 47
        on right: 48
    variable (75)
        on left: 49 50
        on right: 45 50 55
    expression (76)
        on left: 51 52 53 54 55 56
        on right: 39 44 45 50 51 52 53 57 58 63
    liste_expressions (77)
        on left: 57 58 59
        on right: 48 56 57
    condition (78)
        on left: 60 61 62 63
        on right: 35 36 37 38 60 61 62
    binary_op (79)
        on left: 64 65 66 67 68 69 70 71
        on right: 52
    binary_rel (80)
        on left: 72 73
        on right: 61
    binary_comp (81)
        on left: 74 75 76 77 78 79
        on right: 63


State 0

    0 $accept: . programme $end

    $default  reduce using rule 3 (liste_declarations)

    programme           go to state 1
    liste_declarations  go to state 2


State 1

    0 $accept: programme . $end

    $end  shift, and go to state 3


State 2

    1 programme: liste_declarations . liste_fonctions
    2 liste_declarations: liste_declarations . declaration

    VOID  shift, and go to state 4
    INT   shift, and go to state 5

    VOID      [reduce using rule 5 (liste_fonctions)]
    INT       [reduce using rule 5 (liste_fonctions)]
    $default  reduce using rule 5 (liste_fonctions)

    liste_fonctions  go to state 6
    declaration      go to state 7
    type             go to state 8


State 3

    0 $accept: programme $end .

    $default  accept


State 4

   15 type: VOID .

    $default  reduce using rule 15 (type)


State 5

   16 type: INT .

    $default  reduce using rule 16 (type)


State 6

    1 programme: liste_declarations liste_fonctions .
    4 liste_fonctions: liste_fonctions . fonction

    $end      reduce using rule 1 (programme)
    EXTERN    reduce using rule 13 ($@2)
    $default  reduce using rule 11 ($@1)

    fonction  go to state 9
    $@1       go to state 10
    $@2       go to state 11


State 7

    2 liste_declarations: liste_declarations declaration .

    $default  reduce using rule 2 (liste_declarations)


State 8

    6 declaration: type . liste_declarateurs ';'

    IDENTIFICATEUR  shift, and go to state 12

    liste_declarateurs  go to state 13
    declarateur         go to state 14


State 9

    4 liste_fonctions: liste_fonctions fonction .

    $default  reduce using rule 4 (liste_fonctions)


State 10

   12 fonction: $@1 . type IDENTIFICATEUR '(' liste_parms ')' '{' liste_declarations liste_instructions '}'

    VOID  shift, and go to state 4
    INT   shift, and go to state 5

    type  go to state 15


State 11

   14 fonction: $@2 . EXTERN type IDENTIFICATEUR '(' liste_parms ')' ';'

    EXTERN  shift, and go to state 16


State 12

    9 declarateur: IDENTIFICATEUR .

    $default  reduce using rule 9 (declarateur)


State 13

    6 declaration: type liste_declarateurs . ';'
    7 liste_declarateurs: liste_declarateurs . ',' declarateur

    ';'  shift, and go to state 17
    ','  shift, and go to state 18


State 14

    8 liste_declarateurs: declarateur .
   10 declarateur: declarateur . '[' CONSTANTE ']'

    '['  shift, and go to state 19

    $default  reduce using rule 8 (liste_declarateurs)


State 15

   12 fonction: $@1 type . IDENTIFICATEUR '(' liste_parms ')' '{' liste_declarations liste_instructions '}'

    IDENTIFICATEUR  shift, and go to state 20


State 16

   14 fonction: $@2 EXTERN . type IDENTIFICATEUR '(' liste_parms ')' ';'

    VOID  shift, and go to state 4
    INT   shift, and go to state 5

    type  go to state 21


State 17

    6 declaration: type liste_declarateurs ';' .

    $default  reduce using rule 6 (declaration)


State 18

    7 liste_declarateurs: liste_declarateurs ',' . declarateur

    IDENTIFICATEUR  shift, and go to state 12

    declarateur  go to state 22


State 19

   10 declarateur: declarateur '[' . CONSTANTE ']'

    CONSTANTE  shift, and go to state 23


State 20

   12 fonction: $@1 type IDENTIFICATEUR . '(' liste_parms ')' '{' liste_declarations liste_instructions '}'

    '('  shift, and go to state 24


State 21

   14 fonction: $@2 EXTERN type . IDENTIFICATEUR '(' liste_parms ')' ';'

    IDENTIFICATEUR  shift, and go to state 25


State 22

    7 liste_declarateurs: liste_declarateurs ',' declarateur .
   10 declarateur: declarateur . '[' CONSTANTE ']'

    '['  shift, and go to state 19

    $default  reduce using rule 7 (liste_declarateurs)


State 23

   10 declarateur: declarateur '[' CONSTANTE . ']'

    ']'  shift, and go to state 26


State 24

   12 fonction: $@1 type IDENTIFICATEUR '(' . liste_parms ')' '{' liste_declarations liste_instructions '}'

    INT  shift, and go to state 27

    $default  reduce using rule 19 (liste_parms)

    liste_parms  go to state 28
    parm         go to state 29


State 25

   14 fonction: $@2 EXTERN type IDENTIFICATEUR . '(' liste_parms ')' ';'

    '('  shift, and go to state 30


State 26

   10 declarateur: declarateur '[' CONSTANTE ']' .

    $default  reduce using rule 10 (declarateur)


State 27

   20 parm: INT . IDENTIFICATEUR

    IDENTIFICATEUR  shift, and go to state 31


State 28

   12 fonction: $@1 type IDENTIFICATEUR '(' liste_parms . ')' '{' liste_declarations liste_instructions '}'
   17 liste_parms: liste_parms . ',' parm

    ','  shift, and go to state 32
    ')'  shift, and go to state 33


State 29

   18 liste_parms: parm .

    $default  reduce using rule 18 (liste_parms)


State 30

   14 fonction: $@2 EXTERN type IDENTIFICATEUR '(' . liste_parms ')' ';'

    INT  shift, and go to state 27

    $default  reduce using rule 19 (liste_parms)

    liste_parms  go to state 34
    parm         go to state 29


State 31

   20 parm: INT IDENTIFICATEUR .

    $default  reduce using rule 20 (parm)


State 32

   17 liste_parms: liste_parms ',' . parm

    INT  shift, and go to state 27

    parm  go to state 35


State 33

   12 fonction: $@1 type IDENTIFICATEUR '(' liste_parms ')' . '{' liste_declarations liste_instructions '}'

    '{'  shift, and go to state 36


State 34

   14 fonction: $@2 EXTERN type IDENTIFICATEUR '(' liste_parms . ')' ';'
   17 liste_parms: liste_parms . ',' parm

    ','  shift, and go to state 32
    ')'  shift, and go to state 37


State 35

   17 liste_parms: liste_parms ',' parm .

    $default  reduce using rule 17 (liste_parms)


State 36

   12 fonction: $@1 type IDENTIFICATEUR '(' liste_parms ')' '{' . liste_declarations liste_instructions '}'

    $default  reduce using rule 3 (liste_declarations)

    liste_declarations  go to state 38


State 37

   14 fonction: $@2 EXTERN type IDENTIFICATEUR '(' liste_parms ')' . ';'

    ';'  shift, and go to state 39


State 38

    2 liste_declarations: liste_declarations . declaration
   12 fonction: $@1 type IDENTIFICATEUR '(' liste_parms ')' '{' liste_declarations . liste_instructions '}'

    VOID  shift, and go to state 4
    INT   shift, and go to state 5

    $default  reduce using rule 22 (liste_instructions)

    declaration         go to state 7
    type                go to state 8
    liste_instructions  go to state 40


State 39

   14 fonction: $@2 EXTERN type IDENTIFICATEUR '(' liste_parms ')' ';' .

    $default  reduce using rule 14 (fonction)


State 40

   12 fonction: $@1 type IDENTIFICATEUR '(' liste_parms ')' '{' liste_declarations liste_instructions . '}'
   21 liste_instructions: liste_instructions . instruction

    '}'  shift, and go to state 41

    IDENTIFICATEUR  reduce using rule 23 ($@3)
    IDENTIFICATEUR  [reduce using rule 31 ($@7)]
    FOR             reduce using rule 25 ($@4)
    WHILE           reduce using rule 25 ($@4)
    BREAK           reduce using rule 29 ($@6)
    RETURN          reduce using rule 29 ($@6)
    '{'             reduce using rule 33 ($@8)
    $default        reduce using rule 27 ($@5)

    instruction  go to state 42
    $@3          go to state 43
    $@4          go to state 44
    $@5          go to state 45
    $@6          go to state 46
    $@7          go to state 47
    $@8          go to state 48


State 41

   12 fonction: $@1 type IDENTIFICATEUR '(' liste_parms ')' '{' liste_declarations liste_instructions '}' .

    $default  reduce using rule 12 (fonction)


State 42

   21 liste_instructions: liste_instructions instruction .

    $default  reduce using rule 21 (liste_instructions)


State 43

   24 instruction: $@3 . affectation ';'

    IDENTIFICATEUR  shift, and go to state 49

    affectation  go to state 50
    variable     go to state 51


State 44

   26 instruction: $@4 . iteration

    FOR    shift, and go to state 52
    WHILE  shift, and go to state 53

    iteration  go to state 54


State 45

   28 instruction: $@5 . selection

    IF       shift, and go to state 55
    SWITCH   shift, and go to state 56
    CASE     shift, and go to state 57
    DEFAULT  shift, and go to state 58

    selection  go to state 59


State 46

   30 instruction: $@6 . saut

    BREAK   shift, and go to state 60
    RETURN  shift, and go to state 61

    saut  go to state 62


State 47

   32 instruction: $@7 . appel

    $default  reduce using rule 47 ($@9)

    appel  go to state 63
    $@9    go to state 64


State 48

   34 instruction: $@8 . bloc

    '{'  shift, and go to state 65

    bloc  go to state 66


State 49

   49 variable: IDENTIFICATEUR .

    $default  reduce using rule 49 (variable)


State 50

   24 instruction: $@3 affectation . ';'

    ';'  shift, and go to state 67


State 51

   45 affectation: variable . '=' expression
   50 variable: variable . '[' expression ']'

    '['  shift, and go to state 68
    '='  shift, and go to state 69


State 52

   35 iteration: FOR . '(' affectation ';' condition ';' affectation ')' instruction

    '('  shift, and go to state 70


State 53

   36 iteration: WHILE . '(' condition ')' instruction

    '('  shift, and go to state 71


State 54

   26 instruction: $@4 iteration .

    $default  reduce using rule 26 (instruction)


State 55

   37 selection: IF . '(' condition ')' instruction
   38          | IF . '(' condition ')' instruction ELSE instruction

    '('  shift, and go to state 72


State 56

   39 selection: SWITCH . '(' expression ')' instruction

    '('  shift, and go to state 73


State 57

   40 selection: CASE . CONSTANTE ':' instruction

    CONSTANTE  shift, and go to state 74


State 58

   41 selection: DEFAULT . ':' instruction

    ':'  shift, and go to state 75


State 59

   28 instruction: $@5 selection .

    $default  reduce using rule 28 (instruction)


State 60

   42 saut: BREAK . ';'

    ';'  shift, and go to state 76


State 61

   43 saut: RETURN . ';'
   44     | RETURN . expression ';'

    IDENTIFICATEUR  shift, and go to state 77
    CONSTANTE       shift, and go to state 78
    MOINS           shift, and go to state 79
    ';'             shift, and go to state 80
    '('             shift, and go to state 81

    variable    go to state 82
    expression  go to state 83


State 62

   30 instruction: $@6 saut .

    $default  reduce using rule 30 (instruction)


State 63

   32 instruction: $@7 appel .

    $default  reduce using rule 32 (instruction)


State 64

   48 appel: $@9 . IDENTIFICATEUR '(' liste_expressions ')' ';'

    IDENTIFICATEUR  shift, and go to state 84


State 65

   46 bloc: '{' . liste_declarations liste_instructions '}'

    $default  reduce using rule 3 (liste_declarations)

    liste_declarations  go to state 85


State 66

   34 instruction: $@8 bloc .

    $default  reduce using rule 34 (instruction)


State 67

   24 instruction: $@3 affectation ';' .

    $default  reduce using rule 24 (instruction)


State 68

   50 variable: variable '[' . expression ']'

    IDENTIFICATEUR  shift, and go to state 77
    CONSTANTE       shift, and go to state 78
    MOINS           shift, and go to state 79
    '('             shift, and go to state 81

    variable    go to state 82
    expression  go to state 86


State 69

   45 affectation: variable '=' . expression

    IDENTIFICATEUR  shift, and go to state 77
    CONSTANTE       shift, and go to state 78
    MOINS           shift, and go to state 79
    '('             shift, and go to state 81

    variable    go to state 82
    expression  go to state 87


State 70

   35 iteration: FOR '(' . affectation ';' condition ';' affectation ')' instruction

    IDENTIFICATEUR  shift, and go to state 49

    affectation  go to state 88
    variable     go to state 51


State 71

   36 iteration: WHILE '(' . condition ')' instruction

    IDENTIFICATEUR  shift, and go to state 77
    CONSTANTE       shift, and go to state 78
    MOINS           shift, and go to state 79
    NOT             shift, and go to state 89
    '('             shift, and go to state 90

    variable    go to state 82
    expression  go to state 91
    condition   go to state 92


State 72

   37 selection: IF '(' . condition ')' instruction
   38          | IF '(' . condition ')' instruction ELSE instruction

    IDENTIFICATEUR  shift, and go to state 77
    CONSTANTE       shift, and go to state 78
    MOINS           shift, and go to state 79
    NOT             shift, and go to state 89
    '('             shift, and go to state 90

    variable    go to state 82
    expression  go to state 91
    condition   go to state 93


State 73

   39 selection: SWITCH '(' . expression ')' instruction

    IDENTIFICATEUR  shift, and go to state 77
    CONSTANTE       shift, and go to state 78
    MOINS           shift, and go to state 79
    '('             shift, and go to state 81

    variable    go to state 82
    expression  go to state 94


State 74

   40 selection: CASE CONSTANTE . ':' instruction

    ':'  shift, and go to state 95


State 75

   41 selection: DEFAULT ':' . instruction

    IDENTIFICATEUR  reduce using rule 23 ($@3)
    IDENTIFICATEUR  [reduce using rule 31 ($@7)]
    FOR             reduce using rule 25 ($@4)
    WHILE           reduce using rule 25 ($@4)
    BREAK           reduce using rule 29 ($@6)
    RETURN          reduce using rule 29 ($@6)
    '{'             reduce using rule 33 ($@8)
    $default        reduce using rule 27 ($@5)

    instruction  go to state 96
    $@3          go to state 43
    $@4          go to state 44
    $@5          go to state 45
    $@6          go to state 46
    $@7          go to state 47
    $@8          go to state 48


State 76

   42 saut: BREAK ';' .

    $default  reduce using rule 42 (saut)


State 77

   49 variable: IDENTIFICATEUR .
   56 expression: IDENTIFICATEUR . '(' liste_expressions ')'

    '('  shift, and go to state 97

    $default  reduce using rule 49 (variable)


State 78

   54 expression: CONSTANTE .

    $default  reduce using rule 54 (expression)


State 79

   53 expression: MOINS . expression

    IDENTIFICATEUR  shift, and go to state 77
    CONSTANTE       shift, and go to state 78
    MOINS           shift, and go to state 79
    '('             shift, and go to state 81

    variable    go to state 82
    expression  go to state 98


State 80

   43 saut: RETURN ';' .

    $default  reduce using rule 43 (saut)


State 81

   51 expression: '(' . expression ')'

    IDENTIFICATEUR  shift, and go to state 77
    CONSTANTE       shift, and go to state 78
    MOINS           shift, and go to state 79
    '('             shift, and go to state 81

    variable    go to state 82
    expression  go to state 99


State 82

   50 variable: variable . '[' expression ']'
   55 expression: variable .

    '['  shift, and go to state 68

    $default  reduce using rule 55 (expression)


State 83

   44 saut: RETURN expression . ';'
   52 expression: expression . binary_op expression

    PLUS    shift, and go to state 100
    MOINS   shift, and go to state 101
    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107
    ';'     shift, and go to state 108

    binary_op  go to state 109


State 84

   48 appel: $@9 IDENTIFICATEUR . '(' liste_expressions ')' ';'

    '('  shift, and go to state 110


State 85

    2 liste_declarations: liste_declarations . declaration
   46 bloc: '{' liste_declarations . liste_instructions '}'

    VOID  shift, and go to state 4
    INT   shift, and go to state 5

    $default  reduce using rule 22 (liste_instructions)

    declaration         go to state 7
    type                go to state 8
    liste_instructions  go to state 111


State 86

   50 variable: variable '[' expression . ']'
   52 expression: expression . binary_op expression

    PLUS    shift, and go to state 100
    MOINS   shift, and go to state 101
    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107
    ']'     shift, and go to state 112

    binary_op  go to state 109


State 87

   45 affectation: variable '=' expression .
   52 expression: expression . binary_op expression

    PLUS    shift, and go to state 100
    MOINS   shift, and go to state 101
    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107

    $default  reduce using rule 45 (affectation)

    binary_op  go to state 109


State 88

   35 iteration: FOR '(' affectation . ';' condition ';' affectation ')' instruction

    ';'  shift, and go to state 113


State 89

   60 condition: NOT . '(' condition ')'

    '('  shift, and go to state 114


State 90

   51 expression: '(' . expression ')'
   62 condition: '(' . condition ')'

    IDENTIFICATEUR  shift, and go to state 77
    CONSTANTE       shift, and go to state 78
    MOINS           shift, and go to state 79
    NOT             shift, and go to state 89
    '('             shift, and go to state 90

    variable    go to state 82
    expression  go to state 115
    condition   go to state 116


State 91

   52 expression: expression . binary_op expression
   63 condition: expression . binary_comp expression

    PLUS    shift, and go to state 100
    MOINS   shift, and go to state 101
    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107
    LT      shift, and go to state 117
    GT      shift, and go to state 118
    GEQ     shift, and go to state 119
    LEQ     shift, and go to state 120
    EQ      shift, and go to state 121
    NEQ     shift, and go to state 122

    binary_op    go to state 109
    binary_comp  go to state 123


State 92

   36 iteration: WHILE '(' condition . ')' instruction
   61 condition: condition . binary_rel condition

    LAND  shift, and go to state 124
    LOR   shift, and go to state 125
    ')'   shift, and go to state 126

    binary_rel  go to state 127


State 93

   37 selection: IF '(' condition . ')' instruction
   38          | IF '(' condition . ')' instruction ELSE instruction
   61 condition: condition . binary_rel condition

    LAND  shift, and go to state 124
    LOR   shift, and go to state 125
    ')'   shift, and go to state 128

    binary_rel  go to state 127


State 94

   39 selection: SWITCH '(' expression . ')' instruction
   52 expression: expression . binary_op expression

    PLUS    shift, and go to state 100
    MOINS   shift, and go to state 101
    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107
    ')'     shift, and go to state 129

    binary_op  go to state 109


State 95

   40 selection: CASE CONSTANTE ':' . instruction

    IDENTIFICATEUR  reduce using rule 23 ($@3)
    IDENTIFICATEUR  [reduce using rule 31 ($@7)]
    FOR             reduce using rule 25 ($@4)
    WHILE           reduce using rule 25 ($@4)
    BREAK           reduce using rule 29 ($@6)
    RETURN          reduce using rule 29 ($@6)
    '{'             reduce using rule 33 ($@8)
    $default        reduce using rule 27 ($@5)

    instruction  go to state 130
    $@3          go to state 43
    $@4          go to state 44
    $@5          go to state 45
    $@6          go to state 46
    $@7          go to state 47
    $@8          go to state 48


State 96

   41 selection: DEFAULT ':' instruction .

    $default  reduce using rule 41 (selection)


State 97

   56 expression: IDENTIFICATEUR '(' . liste_expressions ')'

    IDENTIFICATEUR  shift, and go to state 77
    CONSTANTE       shift, and go to state 78
    MOINS           shift, and go to state 79
    '('             shift, and go to state 81

    $default  reduce using rule 59 (liste_expressions)

    variable           go to state 82
    expression         go to state 131
    liste_expressions  go to state 132


State 98

   52 expression: expression . binary_op expression
   53           | MOINS expression .

    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107

    $default  reduce using rule 53 (expression)

    binary_op  go to state 109


State 99

   51 expression: '(' expression . ')'
   52           | expression . binary_op expression

    PLUS    shift, and go to state 100
    MOINS   shift, and go to state 101
    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107
    ')'     shift, and go to state 133

    binary_op  go to state 109


State 100

   64 binary_op: PLUS .

    $default  reduce using rule 64 (binary_op)


State 101

   65 binary_op: MOINS .

    $default  reduce using rule 65 (binary_op)


State 102

   66 binary_op: MUL .

    $default  reduce using rule 66 (binary_op)


State 103

   67 binary_op: DIV .

    $default  reduce using rule 67 (binary_op)


State 104

   68 binary_op: LSHIFT .

    $default  reduce using rule 68 (binary_op)


State 105

   69 binary_op: RSHIFT .

    $default  reduce using rule 69 (binary_op)


State 106

   70 binary_op: BAND .

    $default  reduce using rule 70 (binary_op)


State 107

   71 binary_op: BOR .

    $default  reduce using rule 71 (binary_op)


State 108

   44 saut: RETURN expression ';' .

    $default  reduce using rule 44 (saut)


State 109

   52 expression: expression binary_op . expression

    IDENTIFICATEUR  shift, and go to state 77
    CONSTANTE       shift, and go to state 78
    MOINS           shift, and go to state 79
    '('             shift, and go to state 81

    variable    go to state 82
    expression  go to state 134


State 110

   48 appel: $@9 IDENTIFICATEUR '(' . liste_expressions ')' ';'

    IDENTIFICATEUR  shift, and go to state 77
    CONSTANTE       shift, and go to state 78
    MOINS           shift, and go to state 79
    '('             shift, and go to state 81

    $default  reduce using rule 59 (liste_expressions)

    variable           go to state 82
    expression         go to state 131
    liste_expressions  go to state 135


State 111

   21 liste_instructions: liste_instructions . instruction
   46 bloc: '{' liste_declarations liste_instructions . '}'

    '}'  shift, and go to state 136

    IDENTIFICATEUR  reduce using rule 23 ($@3)
    IDENTIFICATEUR  [reduce using rule 31 ($@7)]
    FOR             reduce using rule 25 ($@4)
    WHILE           reduce using rule 25 ($@4)
    BREAK           reduce using rule 29 ($@6)
    RETURN          reduce using rule 29 ($@6)
    '{'             reduce using rule 33 ($@8)
    $default        reduce using rule 27 ($@5)

    instruction  go to state 42
    $@3          go to state 43
    $@4          go to state 44
    $@5          go to state 45
    $@6          go to state 46
    $@7          go to state 47
    $@8          go to state 48


State 112

   50 variable: variable '[' expression ']' .

    $default  reduce using rule 50 (variable)


State 113

   35 iteration: FOR '(' affectation ';' . condition ';' affectation ')' instruction

    IDENTIFICATEUR  shift, and go to state 77
    CONSTANTE       shift, and go to state 78
    MOINS           shift, and go to state 79
    NOT             shift, and go to state 89
    '('             shift, and go to state 90

    variable    go to state 82
    expression  go to state 91
    condition   go to state 137


State 114

   60 condition: NOT '(' . condition ')'

    IDENTIFICATEUR  shift, and go to state 77
    CONSTANTE       shift, and go to state 78
    MOINS           shift, and go to state 79
    NOT             shift, and go to state 89
    '('             shift, and go to state 90

    variable    go to state 82
    expression  go to state 91
    condition   go to state 138


State 115

   51 expression: '(' expression . ')'
   52           | expression . binary_op expression
   63 condition: expression . binary_comp expression

    PLUS    shift, and go to state 100
    MOINS   shift, and go to state 101
    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107
    LT      shift, and go to state 117
    GT      shift, and go to state 118
    GEQ     shift, and go to state 119
    LEQ     shift, and go to state 120
    EQ      shift, and go to state 121
    NEQ     shift, and go to state 122
    ')'     shift, and go to state 133

    binary_op    go to state 109
    binary_comp  go to state 123


State 116

   61 condition: condition . binary_rel condition
   62          | '(' condition . ')'

    LAND  shift, and go to state 124
    LOR   shift, and go to state 125
    ')'   shift, and go to state 139

    binary_rel  go to state 127


State 117

   74 binary_comp: LT .

    $default  reduce using rule 74 (binary_comp)


State 118

   75 binary_comp: GT .

    $default  reduce using rule 75 (binary_comp)


State 119

   76 binary_comp: GEQ .

    $default  reduce using rule 76 (binary_comp)


State 120

   77 binary_comp: LEQ .

    $default  reduce using rule 77 (binary_comp)


State 121

   78 binary_comp: EQ .

    $default  reduce using rule 78 (binary_comp)


State 122

   79 binary_comp: NEQ .

    $default  reduce using rule 79 (binary_comp)


State 123

   63 condition: expression binary_comp . expression

    IDENTIFICATEUR  shift, and go to state 77
    CONSTANTE       shift, and go to state 78
    MOINS           shift, and go to state 79
    '('             shift, and go to state 81

    variable    go to state 82
    expression  go to state 140


State 124

   72 binary_rel: LAND .

    $default  reduce using rule 72 (binary_rel)


State 125

   73 binary_rel: LOR .

    $default  reduce using rule 73 (binary_rel)


State 126

   36 iteration: WHILE '(' condition ')' . instruction

    IDENTIFICATEUR  reduce using rule 23 ($@3)
    IDENTIFICATEUR  [reduce using rule 31 ($@7)]
    FOR             reduce using rule 25 ($@4)
    WHILE           reduce using rule 25 ($@4)
    BREAK           reduce using rule 29 ($@6)
    RETURN          reduce using rule 29 ($@6)
    '{'             reduce using rule 33 ($@8)
    $default        reduce using rule 27 ($@5)

    instruction  go to state 141
    $@3          go to state 43
    $@4          go to state 44
    $@5          go to state 45
    $@6          go to state 46
    $@7          go to state 47
    $@8          go to state 48


State 127

   61 condition: condition binary_rel . condition

    IDENTIFICATEUR  shift, and go to state 77
    CONSTANTE       shift, and go to state 78
    MOINS           shift, and go to state 79
    NOT             shift, and go to state 89
    '('             shift, and go to state 90

    variable    go to state 82
    expression  go to state 91
    condition   go to state 142


State 128

   37 selection: IF '(' condition ')' . instruction
   38          | IF '(' condition ')' . instruction ELSE instruction

    IDENTIFICATEUR  reduce using rule 23 ($@3)
    IDENTIFICATEUR  [reduce using rule 31 ($@7)]
    FOR             reduce using rule 25 ($@4)
    WHILE           reduce using rule 25 ($@4)
    BREAK           reduce using rule 29 ($@6)
    RETURN          reduce using rule 29 ($@6)
    '{'             reduce using rule 33 ($@8)
    $default        reduce using rule 27 ($@5)

    instruction  go to state 143
    $@3          go to state 43
    $@4          go to state 44
    $@5          go to state 45
    $@6          go to state 46
    $@7          go to state 47
    $@8          go to state 48


State 129

   39 selection: SWITCH '(' expression ')' . instruction

    IDENTIFICATEUR  reduce using rule 23 ($@3)
    IDENTIFICATEUR  [reduce using rule 31 ($@7)]
    FOR             reduce using rule 25 ($@4)
    WHILE           reduce using rule 25 ($@4)
    BREAK           reduce using rule 29 ($@6)
    RETURN          reduce using rule 29 ($@6)
    '{'             reduce using rule 33 ($@8)
    $default        reduce using rule 27 ($@5)

    instruction  go to state 144
    $@3          go to state 43
    $@4          go to state 44
    $@5          go to state 45
    $@6          go to state 46
    $@7          go to state 47
    $@8          go to state 48


State 130

   40 selection: CASE CONSTANTE ':' instruction .

    $default  reduce using rule 40 (selection)


State 131

   52 expression: expression . binary_op expression
   58 liste_expressions: expression .

    PLUS    shift, and go to state 100
    MOINS   shift, and go to state 101
    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107

    $default  reduce using rule 58 (liste_expressions)

    binary_op  go to state 109


State 132

   56 expression: IDENTIFICATEUR '(' liste_expressions . ')'
   57 liste_expressions: liste_expressions . ',' expression

    ','  shift, and go to state 145
    ')'  shift, and go to state 146


State 133

   51 expression: '(' expression ')' .

    $default  reduce using rule 51 (expression)


State 134

   52 expression: expression . binary_op expression
   52           | expression binary_op expression .

    $default  reduce using rule 52 (expression)

    binary_op  go to state 109


State 135

   48 appel: $@9 IDENTIFICATEUR '(' liste_expressions . ')' ';'
   57 liste_expressions: liste_expressions . ',' expression

    ','  shift, and go to state 145
    ')'  shift, and go to state 147


State 136

   46 bloc: '{' liste_declarations liste_instructions '}' .

    $default  reduce using rule 46 (bloc)


State 137

   35 iteration: FOR '(' affectation ';' condition . ';' affectation ')' instruction
   61 condition: condition . binary_rel condition

    LAND  shift, and go to state 124
    LOR   shift, and go to state 125
    ';'   shift, and go to state 148

    binary_rel  go to state 127


State 138

   60 condition: NOT '(' condition . ')'
   61          | condition . binary_rel condition

    LAND  shift, and go to state 124
    LOR   shift, and go to state 125
    ')'   shift, and go to state 149

    binary_rel  go to state 127


State 139

   62 condition: '(' condition ')' .

    $default  reduce using rule 62 (condition)


State 140

   52 expression: expression . binary_op expression
   63 condition: expression binary_comp expression .

    PLUS    shift, and go to state 100
    MOINS   shift, and go to state 101
    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107

    $default  reduce using rule 63 (condition)

    binary_op  go to state 109


State 141

   36 iteration: WHILE '(' condition ')' instruction .

    $default  reduce using rule 36 (iteration)


State 142

   61 condition: condition . binary_rel condition
   61          | condition binary_rel condition .

    $default  reduce using rule 61 (condition)

    binary_rel  go to state 127


State 143

   37 selection: IF '(' condition ')' instruction .
   38          | IF '(' condition ')' instruction . ELSE instruction

    ELSE  shift, and go to state 150

    $default  reduce using rule 37 (selection)


State 144

   39 selection: SWITCH '(' expression ')' instruction .

    $default  reduce using rule 39 (selection)


State 145

   57 liste_expressions: liste_expressions ',' . expression

    IDENTIFICATEUR  shift, and go to state 77
    CONSTANTE       shift, and go to state 78
    MOINS           shift, and go to state 79
    '('             shift, and go to state 81

    variable    go to state 82
    expression  go to state 151


State 146

   56 expression: IDENTIFICATEUR '(' liste_expressions ')' .

    $default  reduce using rule 56 (expression)


State 147

   48 appel: $@9 IDENTIFICATEUR '(' liste_expressions ')' . ';'

    ';'  shift, and go to state 152


State 148

   35 iteration: FOR '(' affectation ';' condition ';' . affectation ')' instruction

    IDENTIFICATEUR  shift, and go to state 49

    affectation  go to state 153
    variable     go to state 51


State 149

   60 condition: NOT '(' condition ')' .

    $default  reduce using rule 60 (condition)


State 150

   38 selection: IF '(' condition ')' instruction ELSE . instruction

    IDENTIFICATEUR  reduce using rule 23 ($@3)
    IDENTIFICATEUR  [reduce using rule 31 ($@7)]
    FOR             reduce using rule 25 ($@4)
    WHILE           reduce using rule 25 ($@4)
    BREAK           reduce using rule 29 ($@6)
    RETURN          reduce using rule 29 ($@6)
    '{'             reduce using rule 33 ($@8)
    $default        reduce using rule 27 ($@5)

    instruction  go to state 154
    $@3          go to state 43
    $@4          go to state 44
    $@5          go to state 45
    $@6          go to state 46
    $@7          go to state 47
    $@8          go to state 48


State 151

   52 expression: expression . binary_op expression
   57 liste_expressions: liste_expressions ',' expression .

    PLUS    shift, and go to state 100
    MOINS   shift, and go to state 101
    MUL     shift, and go to state 102
    DIV     shift, and go to state 103
    LSHIFT  shift, and go to state 104
    RSHIFT  shift, and go to state 105
    BAND    shift, and go to state 106
    BOR     shift, and go to state 107

    $default  reduce using rule 57 (liste_expressions)

    binary_op  go to state 109


State 152

   48 appel: $@9 IDENTIFICATEUR '(' liste_expressions ')' ';' .

    $default  reduce using rule 48 (appel)


State 153

   35 iteration: FOR '(' affectation ';' condition ';' affectation . ')' instruction

    ')'  shift, and go to state 155


State 154

   38 selection: IF '(' condition ')' instruction ELSE instruction .

    $default  reduce using rule 38 (selection)


State 155

   35 iteration: FOR '(' affectation ';' condition ';' affectation ')' . instruction

    IDENTIFICATEUR  reduce using rule 23 ($@3)
    IDENTIFICATEUR  [reduce using rule 31 ($@7)]
    FOR             reduce using rule 25 ($@4)
    WHILE           reduce using rule 25 ($@4)
    BREAK           reduce using rule 29 ($@6)
    RETURN          reduce using rule 29 ($@6)
    '{'             reduce using rule 33 ($@8)
    $default        reduce using rule 27 ($@5)

    instruction  go to state 156
    $@3          go to state 43
    $@4          go to state 44
    $@5          go to state 45
    $@6          go to state 46
    $@7          go to state 47
    $@8          go to state 48


State 156

   35 iteration: FOR '(' affectation ';' condition ';' affectation ')' instruction .

    $default  reduce using rule 35 (iteration)
